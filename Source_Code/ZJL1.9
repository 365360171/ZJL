#!/system/bin/sh

mount -o remount,rw /system 2>/dev/null
mount -o remount,rw /data 2>/dev/null

cd "${0%/*}"

cd ../

BU=*/busybox

for ZJL in rm ip awk cat cut grep chmod pgrep ifconfig;do
alias $ZJL="$BU $ZJL";done

IN="iptables -t nat"
IM="iptables -t mangle"
OUT=OUTPUT
FOR=FORWARD
PRE=PREROUTING
POS=POSTROUTING
S192="-s 192.168/16"
D192="-d 192.168/16"
D255="-d 255.255.255.255"
PS192="PREROUTING -s 192.168/16"
NERA="-m state --state NEW,ESTABLISHED,RELATED -j ACCEPT"

rm -f *.bak */*.bak 2>/dev/null
chmod -R 777 * 2>/dev/null

PZ=`cat *.ini | awk '{gsub(/[ \t]*\/\/.*/,""); print $0}'`

FX=`echo "${PZ}" | grep "放行UID" | awk -F "=" '{print $2}'`

JW=`echo "${PZ}" | grep "禁网UID" | awk -F "=" '{print $2}'`

FU=`echo "${PZ}" | grep "放行UDP" | awk -F "=" '{print $2}'`

YX=`echo "${PZ}" | grep "放行游戏" | awk -F "=" '{print $2}'`

FS=`echo "${PZ}" | grep "放行HTTPS" | awk -F "=" '{print $2}'`

IC=`echo "${PZ}" | grep "本机ICMP" | awk -F "=" '{print $2}'`

DNS=`echo "${PZ}" | grep "DNS自定义" | awk -F "=" '{print $2}'`

GX=`echo "${PZ}" | grep "共享网络" | awk -F "=" '{print $2}'`

GXU=`echo "${PZ}" | grep "共享UDP" | awk -F "=" '{print $2}'`

GXS=`echo "${PZ}" | grep "共享HTTPS" | awk -F "=" '{print $2}'`

GIC=`echo "${PZ}" | grep "共享ICMP" | awk -F "=" '{print $2}'`

GXD=`echo "${PZ}" | grep "共享DNS" | awk -F "=" '{print $2}'`

HX=`echo "${PZ}" | grep "免流核心" | awk -F "=" '{print $2}'`

XZMS=`echo "${PZ}" | grep "选择模式" | awk -F "=" '{print $2}'`

BMD=`echo "${PZ}" | grep "内网白名单" | awk -F "=" '{print $2}'`

SJ=`echo "${PZ}" | grep "数据开关" | awk -F "=" '{print $2}'`

ZQ=`echo "${PZ}" | grep "开机自启" | awk -F "=" '{print $2}'`

MK=`echo "${PZ}" | grep "秒开防跳" | awk -F "=" '{print $2}'`

if [[ $XZMS != "" ]]
then MS=$XZMS.conf
else MS=*.conf;fi


if [[ $1 = "OFF" ]]
then

if [[ $SJ = "ON" ]]
then svc data disable;fi

$BU pkill tiny
$BU pkill localproxy
$BU pkill CProxy 2>/dev/null

for ZJL in $PRE $OUT;do
$IN -F $ZJL;done

for ZJL in $PRE $FOR $OUT;do
$IM -P $ZJL ACCEPT
$IM -F $ZJL;done

$IN -A $PRE -j oem_nat_pre

echo 0 > /proc/sys/net/ipv4/ip_forward
echo 0 > /proc/sys/net/ipv4/ip_dynaddr

LJA=/system/bin/debuggerd
ZQA=/data/ZJL.sh

if [[ $ZQ = "A" ]] && [ ! -e ${LJA}.ori ]
then mv $LJA ${LJA}.ori
echo '#!/system/bin/sh
script()
{
	sleep 15
	'$ZQA'
	rm -f Start.log
	chmod 777 '$ZQA'
	for i in '$ZQA'
	do
	$i &>>Start.log
	done
}
script &
'${LJA}.ori'
' >$LJA
echo "#!/system/bin/sh\n${PWD}/ZJL OFF ON" > $ZQA
chmod 777 $LJA ${LJA}.ori $ZQA

elif [[ $ZQ != "A" ]] && [ -e ${LJA}.ori ]
then mv ${LJA}.ori $LJA
rm -r $ZQA;fi

LJB=/system/etc/init.qcom.post_boot.sh
ZQB=`cat $LJB | grep "${PWD}/ZJL OFF ON"`

if [[ $ZQ = "B" ]] && [[ $ZQB = "" ]]
then echo "\n${PWD}/ZJL OFF ON" >> $LJB

elif [[ $ZQ != "B" ]] && [[ $ZQB != "" ]]
then echo "`sed "/ZJL/d" $LJB`" > $LJB;fi

if [[ $MK != "ON" ]]
then sleep 0.2;fi;fi


if [[ $2 = "ON" ]]
then

if [ -s $MS ]
then

if [[ $HX = "B" ]]
then uid=`grep uid $MS | grep -o [0-9][0-9]\*`
listen_port=`grep tcp_listen $MS | grep -o [0-9][0-9]\*`
dns_listen_port=`grep dns_listen $MS | grep -o [0-9][0-9]\*`
*/CProxy $MS 2>/dev/null

elif [[ $HX = "C" ]]
then . ./$MS
*/localproxy -c $MS

else . ./$MS
*/tiny -c $MS;fi

echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv4/ip_dynaddr

for ZJL in $OUT $FOR;do
$IM -P $ZJL DROP
$IM -I $ZJL -m state --state INVALID -j DROP;done

$IM -I $PS192 -j DROP
$IM -I $PS192 -m state --state INVALID -j DROP

if [[ $BMD != "" ]]
then for ZJL in $BMD;do
$IM -I $OUT -p 6 -s $ZJL/16 $NERA
$IM -I $OUT -p 17 -s $ZJL/16 --dport 53 $NERA;done
else $IM -I $OUT -p 6 $NERA
$IM -I $OUT -p 17 --dport 53 $NERA;fi

$IN -I $OUT -p 6 -j REDIRECT --to $listen_port

if [[ $DNS = "ON" ]]
then $IN -I $OUT -p 17 --dport 53 -j ACCEPT
$IM -I $OUT -p 17 --dport 53 -j ACCEPT

elif [[ $DNS != "" ]]
then $IN -I $OUT -p 17 --dport 53 -j DNAT --to $DNS
else $IN -I $OUT -p 17 --dport 53 -j REDIRECT --to $dns_listen_port;fi

$IN -I $OUT $S192 -j ACCEPT
$IM -I $OUT $S192 -j ACCEPT
$IN -I $OUT $D255 -j ACCEPT

$IN -I $OUT -m owner --uid $user$uid -j ACCEPT
$IM -I $OUT -m owner --uid $user$uid -j ACCEPT

for ZJL in rndis+ wlan+ tun+ ap+ lo;do
$IN -I $OUT -o $ZJL -j ACCEPT
$IM -I $OUT -o $ZJL -j ACCEPT;done

if [[ $SJ = "ON" ]]
then svc data enable;fi

if [[ $FX = "ON" ]]
then $IN -I $OUT -j ACCEPT
$IM -I $OUT -j ACCEPT

elif [[ $FX != "" ]]
then for ZJL in $FX;do
$IN -I $OUT -m owner --uid $ZJL -j ACCEPT
$IM -I $OUT -m owner --uid $ZJL -j ACCEPT;done;fi

if [[ $JW = "ON" ]]
then $IM -P $OUT DROP

elif [[ $JW != "" ]]
then for ZJL in $JW;do
$IM -I $OUT -m owner --uid $ZJL -j DROP;done;fi

if [[ $FU = "ON" ]]
then $IN -I $OUT -p 17 -j ACCEPT
$IM -I $OUT -p 17 -j ACCEPT

elif [[ $FU != "" ]]
then for ZJL in $FU;do
$IN -I $OUT -m owner --uid $ZJL -p 17 -j ACCEPT
$IM -I $OUT -m owner --uid $ZJL -p 17 -j ACCEPT;done;fi

for BM in com.tencent.tmgp.sgame com.tencent.tmgp.speedmobile com.tencent.tmgp.cf com.tencent.tmgp.pubgm com.netease.hyxd com.netease.zjz com.netease.dwrg;do

YXUID=`cat /data/system/packages.list | grep $BM | cut -d " " -f 2`

for ZJL in $YXUID;do

if [[ $YX = "UID" ]]
then iptables -t nat -I OUTPUT -m owner --uid $ZJL -j ACCEPT
iptables -t mangle -I OUTPUT -m owner --uid $ZJL -j ACCEPT

elif [[ $YX = "UDP" ]]
then iptables -t nat -I OUTPUT -p 17 -m owner --uid $ZJL -j ACCEPT
iptables -t mangle -I OUTPUT -p 17 -m owner --uid $ZJL -j ACCEPT;fi;done;done

if [[ $FS = "ON" ]]
then $IN -I $OUT --dport 443 -j ACCEPT
$IM -I $OUT --dport 443 -j ACCEPT

elif [[ $FS != "" ]]
then for ZJL in $FS;do
$IN -I $OUT -p 6 --dport 443 -m owner --uid $ZJL -j ACCEPT
$IM -I $OUT -p 6 --dport 443 -m owner --uid $ZJL -j ACCEPT;done;fi

if [[ $IC = "ON" ]]
then $IN -I $OUT -p 1 -j ACCEPT
$IM -I $OUT -p 1 -j ACCEPT;fi

if [[ $GX = "ON" ]]
then $IM -I $PS192 -j ACCEPT
$IM -P $FOR ACCEPT

elif [[ $GX = "OFF" ]]
then break

elif [[ $GX != "ON" ]] && [[ $GX != "OFF" ]]
then $IM -I $PS192 -p 6 $NERA
$IM -I $PS192 -p 17 --dport 53 $NERA
$IN -I $PS192 -p 6 -j REDIRECT --to $listen_port

if [[ $GFD = "ON" ]]
then $IM -I $FOR -p 17 --dport 53 -j ACCEPT
$IN -I $PS192 -p 17 --dport 53 -j ACCEPT
$IM -I $PS192 -p 17 --dport 53 -j ACCEPT

else $IN -I $PS192 -p 17 --dport 53 -j REDIRECT --to $dns_listen_port;fi;fi

if [[ $GFU = "ON" ]]
then $IM -I $FOR -p 17 -j ACCEPT
$IN -I $PS192 -p 17 -j ACCEPT
$IM -I $PS192 -p 17 -j ACCEPT;fi

$IN -I $PRE $D192 -j ACCEPT
$IM -I $PRE $D192 -j ACCEPT
$IN -I $PRE $D255 -j ACCEPT

if [[ $GS = "ON" ]]
then $IM -I $FOR -p 6 --dport 443 -j ACCEPT
$IN -I $PS192 -p 6 --dport 443 -j ACCEPT
$IM -I $PS192 -p 6 --dport 443 -j ACCEPT

elif [[ $GS = "OFF" ]]
then $IM -I $FOR -p 6 --dport 443 -j DROP
$IM -I $PS192 -p 6 --dport 443 -j DROP;fi

if [[ $GIC = "ON" ]]
then $IM -I $FOR -p 1 -j ACCEPT
$IN -I $PS192 -p 1 -j ACCEPT
$IM -I $PS192 -p 1 -j ACCEPT;fi;fi

if [[ $MK != "ON" ]]
then sleep 1.3;fi;fi


for WK in `cat /data/misc/net/rt_tables`;do

if [[ `ip addr | grep "/" | grep -i $WK` != "" ]]
then WWK=$WK
SWK=`ifconfig $WK` 2>/dev/null;fi;done

TX=`echo ${SWK#*RX bytes} | cut -d "(" -f 2 | cut -d ")" -f 1 | cut -d "i" -f 1`

echo "\n\n     ————————————————————————\n\n             ZJL  1.9\n\n     ————————————————————————\n"

if [ -s $MS ]
then

if [[ `pgrep tiny` != "" ]]
then echo "       核心 : tiny √\n"

elif [[ `pgrep CProxy` != "" ]]
then echo "       核心 : CProxy √\n"

elif [[ `pgrep localproxy` != "" ]]
then echo "       核心 : localproxy √\n"

else echo "       核心 : 什么都没开 ×\n";fi

else echo "       模式 : 请检查模式 ×\n";fi

if [[ $MK != "ON" ]]
then NW=`ip addr | grep global | grep inet | grep -v inet6 | grep -v 10.0 | grep -v 192.168 | awk '{print $2}' | cut -d "/" -f 1`

if [[ $XZMS != "" ]]
then echo "       模式 : $XZMS.conf\n";fi

if [[ $TX = "0.0 B" ]] || [[ $TX = "" ]]
then LL="没查到流量 ×"
else LL="$TX 流量";fi

if [[ $WWK != "wlan0" ]]
then 

if [[ $NW != "" ]]
then for ZJL in $NW;do
echo "       内网 : $ZJL\n"
done

APN=`dumpsys connectivity | grep -v "<unknown" | grep -v "(none)" | grep extra | awk '{print $9}' | cut -d "," -f 1 | grep -v "ims"`

HQJRD=`dumpsys connectivity | grep "HttpProxy:"`

JRDDL=`echo ${HQJRD#*HttpProxy:} | cut -d "[" -f 2 | cut -d "]" -f 1`

JRDDK=`echo ${HQJRD#*$JRDDL} | cut -d " " -f 2`

if [[ $JRDDL$JRDDK = "" ]]
then jrddl=代理留空;fi

if [[ $APN != "" ]]
then echo "       APN : $APN $jrddl$JRDDL $JRDDK\n";fi

echo "       已用 : $LL\n"

else echo "       网络 : 数据都没开 ×\n";fi

else echo "       网络 : WiFi 已连接 √\n\n       已用 : $TX\n";fi

RD=`ip neigh | grep REACHABLE | grep -v "192.168.1.1" | grep -v "192.168.0.1" | awk '{print $1}'`

if [[ $RD != "" ]] && [[ `ip addr | grep inet | grep 192.168.43.1` != "" ]]
then echo "     ————————————————————————\n"

for ZJL in $RD;do

if [ $ZJL != "" ]
then zjl=$(($zjl+1));fi;done

. /data/misc/wifi/hostapd.conf 2>/dev/null
RWK=`ifconfig $interface` 2>/dev/null

echo "       热点 : $zjl 个已连接\n\n       信息 :`cat /data/misc/wifi/softap.conf`\n\n       已用 : `echo ${RWK#*TX bytes} | cut -d "(" -f 2 | cut -d ")" -f 1 | cut -d "i" -f 1` 流量\n";fi;fi

. ./*.ini

if [[ $XWB != "" ]]
then echo "     ————————————————————————\n"
echo "$XWB\n";fi

echo "     ————————————————————————             \n"